{"version":3,"sources":["Product.js","AddProduct.js","App.js","serviceWorker.js","index.js"],"names":["Product","props","state","isEdit","onDelete","bind","onEdit","onEditSubmit","this","setState","e","preventDefault","nameInput","value","priceInput","name","price","onSubmit","placeholder","id","ref","defaultValue","onClick","React","Component","AddProduct","onAdd","type","localStorage","setItem","JSON","stringify","App","products","parse","getItem","getProducts","console","log","filteredProducts","filter","product","originalName","map","push","className","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c14eeedb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\n\r\nclass Product extends React.Component {\r\n \r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isEdit:false\r\n        }\r\n        this.onDelete=this.onDelete.bind(this);\r\n        this.onEdit=this.onEdit.bind(this);\r\n        this.onEditSubmit=this.onEditSubmit.bind(this);\r\n    }\r\n    onEdit(){\r\n        this.setState({isEdit:true})\r\n    }\r\n    onEditSubmit(e){\r\n        e.preventDefault();\r\n        this.props.onEditSubmit(this.nameInput.value,this.priceInput.value,this.props.name);\r\n        this.setState({\r\n            isEdit:false\r\n        });\r\n    }\r\n    onDelete(){\r\n        const {onDelete,name} = this.props;\r\n\r\n        onDelete(name);\r\n    }\r\n  render(){\r\n    const {name,price}=this.props;\r\n    return(\r\n        <div>\r\n            {this.state.isEdit?\r\n            (<form onSubmit={this.onSubmit}>\r\n                <input placeholder=\"Name\" id=\"name\" \r\n                ref={nameInput=>this.nameInput=nameInput}\r\n                defaultValue={name}/>\r\n\r\n                <input placeholder=\"Price\" id=\"price\" \r\n                ref={priceInput=>this.priceInput=priceInput}\r\n                defaultValue={price}/>\r\n                <button onClick={this.onEditSubmit}>Save</button>\r\n            </form>)\r\n            :\r\n            (<div>\r\n                <span>{name}\r\n                {` | `}\r\n                {price}\r\n                {` | `}\r\n                <button onClick={this.onDelete}>Delete</button>\r\n                {` | `}\r\n                <button onClick={this.onEdit}>Edit</button></span>\r\n            </div>)\r\n            }\r\n        </div>\r\n        \r\n\r\n    );\r\n    }\r\n } \r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\n\r\nclass AddProduct extends React.Component {\r\n \r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            name:'',\r\n            price:''\r\n        }\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n    }\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        this.props.onAdd(this.nameInput.value,this.priceInput.value)\r\n    }\r\n  render(){\r\n    return(\r\n        <form onSubmit={this.onSubmit}>\r\n            <h3>Add Item</h3>\r\n            <input placeholder=\"Name\" id=\"name\" \r\n            ref={nameInput=>this.nameInput=nameInput}/>\r\n\r\n            <input placeholder=\"Price\" id=\"price\" \r\n            ref={priceInput=>this.priceInput=priceInput}/>\r\n            <button type=\"submit\">Add</button>\r\n            <hr />\r\n        </form>\r\n\r\n    );\r\n    }\r\n } \r\n\r\nexport default AddProduct;\r\n","import React from 'react';\nimport './App.css';\nimport Product from './Product'\nimport AddProduct from './AddProduct';\nconst products=[\n  {\n    name:'iPad',\n    price:650\n  },\n  {\n    name:'iPhone',\n    price:650\n  }\n]\n\nlocalStorage.setItem('products',JSON.stringify(products))\nclass App extends React.Component {\n constructor(props){\n   super(props);\n\n   this.state = {\n     products:JSON.parse(localStorage.getItem('products'))\n    }\n    this.onDelete=this.onDelete.bind(this);\n    this.onAdd=this.onAdd.bind(this);\n    this.onEditSubmit=this.onEditSubmit.bind(this);\n }\n\n componentDidMount(){\n   const products = this.getProducts();\n   this.setState({products});\n }\n\n getProducts(){\n   return this.state.products;\n }\n\n onDelete(name){\n   console.log(name);\n   const products = this.getProducts();\n   const filteredProducts = products.filter(product=>{\n     return product.name!== name;\n   });\n   console.log(filteredProducts);\n   this.setState({products:filteredProducts})\n }\n\n onEditSubmit(name,price,originalName){\n  console.log(name,price);\n  let products = this.getProducts();\n  products = products.map(product=>{\n    if(product.name===originalName){\n      product.name=name;\n      product.price=price;\n    }\n    return product;\n  })\n  this.setState({products});\n }\n\n onAdd(name,price){\n   console.log(name,price);\n\n  const products=this.getProducts();\n  products.push(\n    {\n      name,\n      price\n    }\n  )\n  this.setState({products});\n }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <h1>Products Manager</h1>\n        <AddProduct onAdd={this.onAdd}/>\n        {\n          this.state.products.map(product=>{\n            return(\n              <Product key={product.name} \n              {...product}\n              onDelete = {this.onDelete}\n              onEditSubmit={this.onEditSubmit}\n              />\n\n            );\n          })\n        }\n      </div>\n    );\n } \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}